import csv
import json

input_csv = "mqtt_data.csv"
output_csv = "mqtt_data_structured.csv"

records = []
FILTER_START = "2025-06-04T11:47:33"

with open(input_csv, mode='r', newline='') as infile:
    reader = csv.reader(infile)

    for i, row in enumerate(reader):
        ts, payload = row
        
        if i == 0:
            continue
        if ts < FILTER_START:
            continue

        if len(row) != 2: # Überprüfen 2 Spalten vorhanden sind (timestamp, payload)
            print(f"Zeile {i+1} übersprungen – falsche Spaltenanzahl: {row}")
            continue

        
        if not payload or payload.strip() == "":
            print(f"Leere Payload in Zeile {i+1}")
            continue

        try:
            payload = payload.replace("\n", "").replace("\r", "").strip()
            data = json.loads(payload)
        except json.JSONDecodeError as e:
            print(f" JSON-Fehler in Zeile {i+1}: {e}")
            continue

        color = data.get("color_levels_grams", {})

        entry = {
            "timestamp": ts,
            "id": data.get("id", ""),
            "creation_date": data.get("creation_date", ""),
            "dispenser": data.get("dispenser", ""),
            "bottle": data.get("bottle", ""),
            "time": data.get("time", ""),
            "temperature_c": data.get("temperature_C", ""),
            "fill_level_grams": data.get("fill_level_grams", ""),
            "recipe": data.get("recipe", ""),
            "vibration_index": data.get("vibration-index", ""),
            "color_red": color.get("red", ""),
            "color_blue": color.get("blue", ""),
            "color_green": color.get("green", ""),
            "is_cracked": data.get("is_cracked", ""),
            "drop_oscillation": data.get("drop_oscillation", "")
        }

        records.append(entry)
    



header = [
    "timestamp",
    "id",
    "creation_date",
    "dispenser",
    "bottle",
    "time",
    "temperature_c",
    "fill_level_grams",
    "recipe",
    "vibration_index",
    "color_red",
    "color_blue",
    "color_green",
    "is_cracked",
    "drop_oscillation",
]

with open(output_csv, mode='w', newline='') as outfile:
    writer = csv.DictWriter(outfile, fieldnames=header)
    writer.writeheader()
    for entry in records:
        writer.writerow(entry)


